@page "/customer"

@using MudServerBlazor.Models

@inject MudServerBlazor.Services.Abstract.ICrudService<Customer> service
@inject MudBlazor.ISnackbar snackBar


<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add / Edit Students</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="customer.FirstName" Label="First Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="customer.LastName" Label="Last Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="customer.Country" Label="Country" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="customer.City" Label="City" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Student</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Elevation="25" Items="customers" Filter="new Func<Customer, bool>(Search)" @bind-customer="customer">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Student Name</MudTh>
        <MudTh>Age</MudTh>
        <MudTh>Address</MudTh>
        <MudTh>ContactNo</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.CustomerId</MudTd>
        <MudTd DataLabel="Student Name">@context.FirstName</MudTd>
        <MudTd DataLabel="Age">@context.LastName</MudTd>
        <MudTd DataLabel="Address">@context.Country</MudTd>
        <MudTd DataLabel="ContactNo">@context.City</MudTd>
        <MudTd DataLabel="">
            <MudFab @onclick="@(()=>Edit(@context.CustomerId))" 
                    Color="Color.Primary" 
                    Icon="@Icons.Material.Filled.Edit" 
                    Size="Size.Small" 
                    IconSize="Size.Small" />
            <MudFab @onclick="@(()=>Delete(@context.CustomerId))" 
                    Color="Color.Secondary" 
                    Icon="@Icons.Material.Filled.Delete" 
                    Size="Size.Small" 
                    IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 5,10,20,50}" />
    </PagerContent>
</MudTable>

@code{
    private string searchString = "";

    private Customer customer = new Customer(); //C# 9 Syntax
    private List<Customer> customers = new List<Customer>();

    protected override async Task OnInitializedAsync()
    {
        customers = await service.GetAllAsync();
    }

    private bool Search(Customer customer)
    {
        if (customer.FirstName is not null && customer.LastName is not null && customer.City is not null && customer.Country is not null &&
            customer.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || customer.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || customer.City.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || customer.Country.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }

    private void Save()
    {
        service.Insert(customer);
        snackBar.Add("Customer record saved", Severity.Success);
        StateHasChanged();
    }

    private void Edit(int id)
    {
        customer = customers.FirstOrDefault(c => c.CustomerId == id);
    }

    private void Delete(int id)
    {
        service.Delete(id);
        snackBar.Add("Customer Data Deleted.", Severity.Success);
        StateHasChanged();
    }
}